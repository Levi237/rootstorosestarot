[{"/Users/Levi/Desktop/website/rootstorosestarot/src/index.js":"1","/Users/Levi/Desktop/website/rootstorosestarot/src/App.js":"2","/Users/Levi/Desktop/website/rootstorosestarot/src/reportWebVitals.js":"3","/Users/Levi/Desktop/website/rootstorosestarot/src/constants/routes.js":"4","/Users/Levi/Desktop/website/rootstorosestarot/src/components/deck/Deck.js":"5","/Users/Levi/Desktop/website/rootstorosestarot/src/components/deck/spreads/Three.js":"6"},{"size":1311,"mtime":1609792380721,"results":"7","hashOfConfig":"8"},{"size":731,"mtime":1609993407687,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609618278746,"results":"10","hashOfConfig":"8"},{"size":23,"mtime":1609741922312,"results":"11","hashOfConfig":"8"},{"size":13593,"mtime":1609993407688,"results":"12","hashOfConfig":"8"},{"size":2134,"mtime":1609996091640,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gdhz92",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/Levi/Desktop/website/rootstorosestarot/src/index.js",[],["29","30"],"/Users/Levi/Desktop/website/rootstorosestarot/src/App.js",[],"/Users/Levi/Desktop/website/rootstorosestarot/src/reportWebVitals.js",[],"/Users/Levi/Desktop/website/rootstorosestarot/src/constants/routes.js",[],"/Users/Levi/Desktop/website/rootstorosestarot/src/components/deck/Deck.js",["31","32","33"],"import React, { Component } from 'react';\n\nexport default class Deck extends Component {\n    state = {\n        deck: [\n            {\n                title: \"card one\",\n                image: \"ðŸ˜¬\",\n                info: \"one blah blah blah blah blah blah blah blah\"\n            },{\n                title: \"card two\",\n                image: \"ðŸ˜Š\",\n                info: \"two blah blah blah blah blah blah blah blah\"\n            },{\n                title: \"card three\",\n                image: \"ðŸ˜Ž\",\n                info: \"three blah blah blah blah blah blah blah blah\"\n            },{\n                title: \"card four\",\n                image: \"ðŸ¤—\",\n                info: \"four blah blah blah blah blah blah blah blah\"\n            }\n            ]\n    };\n    render(){\n        const { deck } = this.state;\n        let newDeck = [...deck];\n        let shuffledDeck = [];\n\n        const shuffleCards = () => {\n            while (newDeck.length > 0) {\n                let index = Math.floor(Math.random() * newDeck.length);\n                let card = newDeck[index];\n                shuffledDeck.push(card);\n                newDeck.splice(index, 1);\n            };\n            dealCards();\n            console.log(shuffledDeck, \"shuffled cards\")\n        };\n        const shuffleAgain = () => {\n            newDeck = [...shuffledDeck];\n            clearDeck();\n            shuffleCards();\n            dealCards();\n            console.log(shuffledDeck, \"shuffled again\")\n        };\n        \n        const dealCards = () => {\n            const container = document.getElementById('deckDisplay');\n            console.log(container, \"container\")\n            container.innerHTML = `<div><h2>${shuffledDeck[0].title}</h2></div>`;\n            console.log(shuffledDeck, \"deal deck\", deck, \"<--- deck\")\n        }\n        // const shuffleDealCards = () => {\n        //     shuffleCards();\n        //     dealCards();\n        //     // console.log(shuffledDeck, \"shuffledDeck\");\n        // };\n        const clearDeck = () => {\n            const container = document.getElementById('deckDisplay');\n            while (shuffledDeck.length > 0) {\n                shuffledDeck = [];\n                container.innerHTML = `<div><h2>empty</h2></div>`;\n            }\n            console.log(shuffledDeck, \"clearDeck\");\n        };\n        return (\n            <>\n                <h1>DECK DISPLAY</h1>\n                <div id=\"deckDisplay\">\n                    <div><h2>landing</h2></div>\n                </div>\n                <button onClick={shuffleCards}>\n                    Shuffle Deck\n                </button>\n                <button onClick={dealCards}>\n                    Deal Deck\n                </button>\n                <button onClick={shuffleAgain}>\n                    shuffleAgain\n                </button>\n                <button onClick={clearDeck}>\n                    Clear\n                </button>\n            </>\n        );\n    };\n};","/Users/Levi/Desktop/website/rootstorosestarot/src/components/deck/spreads/Three.js",["34"],"import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport default class ThreeSpread extends Component {\n    render(){\n        const { hand } = this.props;\n\n        const showHand = hand.map((h, k) => {\n            return (\n                <div key={k}>\n                    <img src={`./deck/${h.number}.jpg`}/>\n                </div>\n            )\n        })\n        return(\n            <LocalWrapper>\n                <ContainerSpread>\n                    <section>\n                        <div></div><div></div><div></div>\n                    </section>\n                </ContainerSpread>\n                <ContainerHand>\n                    <section>\n\n                    {showHand}\n                    </section>\n                </ContainerHand>\n\n            </LocalWrapper>\n        );\n    };\n};\n\nconst LocalWrapper = styled.div`\n    position: relative;\n    height: 40vw;\n    max-height: 252px;\n`;\n\nconst Container = styled.div`\n    text-align: center;\n    width: 100vw;\n    > section {\n        margin: 0 auto;\n        width: 100vw;\n        max-width: 600px;\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr;\n        grid-template-areas: ' one two three ';\n        > div {\n            &:first-of-type {\n                grid-area: one;\n            }\n            &:nth-of-type(2) {\n                grid-area: two;\n            }\n            &:nth-of-type(3) {\n                grid-area: three;\n            }\n        }\n    }\n`;\nconst ContainerHand = styled(Container)`\n    position: absolute;\n    top: 0;\n    > section {\n        > div {\n\n            > img {\n                max-width: 80%;\n            }\n        }\n    }\n`;\nconst ContainerSpread = styled(Container)`\n    position: relative;\n    > section {\n    > div {\n        height: 250px;\n        margin-left: 20px;\n        border: solid black 1px;\n        width: 158px;\n        // background-image: url(./deck/back.jpg);\n        // background-size: cover;\n        // background-repeat: no-repeat;\n        // background-position: center;\n        > img {\n            max-width: 80%;\n        }\n    }\n}\n`;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":360,"column":22,"nodeType":"41","messageId":"42","endLine":360,"endColumn":24},{"ruleId":"39","severity":1,"message":"43","line":361,"column":27,"nodeType":"41","messageId":"42","endLine":361,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":372,"column":21,"nodeType":"46","endLine":372,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":11,"column":21,"nodeType":"46","endLine":11,"endColumn":58},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]